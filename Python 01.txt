Алгоритм: конечная последовательность действий, результат

Семейство Алгоритмов (Template Method DP) - и процедурное ООП

1) 
2) 
3) 
...
10) 

Логические операции:  !(мясо || птица)
Отрицание !
Или ||
И &&

Ветвление:
if then else

swith (кофе)
{
	растворимый : {}
	зерновой : {}
	молотый : {}
	defualt : {}
}

Повторение действий:

foreach (kid from group)
{
	check1;
	check2;
	...
	check22;
}

// DoR: Ужин с друзьями
for (int i = 1; i <=10; i++)
{
	
}

do
{
}
while(условие)

Algorithm name: Приготовление чашки кофе!
1) Взять чистую воду (подАлгоритм \ подПрограмма && ветвление);
2) Закипятить чистую воду;
Definition of Ready (DoR): 
Definition of Done (DoD): 
3) Насыпали кофе в чашку

if (кофе == растворимый)
{
}
esle if (кофе == зерновой)
{
	перемолоть кофе в молотый; // (goto)
}
esle if (кофе == молотый)
{
	// дополнительные действия
}

4) Залики кофе кипятком
5) Фильтрация кофе

if (кофе == растворимый)
{
	// Ничего не делаем!
}
esle if (кофе == зерновой || кофе == молотый)
{
	фильтрация;
}
Result: Чашка кофе!


*
*
*

DoR: DoD1 && DoD2 && DoD3
==========================


function1()
sin2x + cos2x == 1



Document (open, close, write, read)
-> Doc, Table, PDF, Music, Video, Email, Msg
-> Internal, External
-> Std, Important, Low

Worker
-> Creator (createCodument), Owner, Contributor (contribute),
 Observer (onNotify), Approver (approve) [Signer(sign)] 
 
 
 Class
	-> class data (static)
	-> class methods (static)
	-> data
	-> methods
 
 
 object
	-> data (скрыты)
	-> methods (string + format || passportData getPassportData)
	changePassport(passportData)
 
 method
 